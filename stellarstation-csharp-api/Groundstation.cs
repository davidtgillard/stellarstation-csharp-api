// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: stellarstation/api/v1/groundstation/groundstation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Stellarstation.Api.V1.Groundstation {

  /// <summary>Holder for reflection information generated from stellarstation/api/v1/groundstation/groundstation.proto</summary>
  public static partial class GroundstationReflection {

    #region Descriptor
    /// <summary>File descriptor for stellarstation/api/v1/groundstation/groundstation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroundstationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjdzdGVsbGFyc3RhdGlvbi9hcGkvdjEvZ3JvdW5kc3RhdGlvbi9ncm91bmRz",
            "dGF0aW9uLnByb3RvEiNzdGVsbGFyc3RhdGlvbi5hcGkudjEuZ3JvdW5kc3Rh",
            "dGlvbhofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxopc3RlbGxh",
            "cnN0YXRpb24vYXBpL3YxL2NvbW1vbi9jb21tb24ucHJvdG8aJ3N0ZWxsYXJz",
            "dGF0aW9uL2FwaS92MS9yYWRpby9yYWRpby5wcm90bxoqc3RlbGxhcnN0YXRp",
            "b24vYXBpL3YxL3N0ZWxsYXJzdGF0aW9uLnByb3RvGiVzdGVsbGFyc3RhdGlv",
            "bi9hcGkvdjEvdHJhbnNwb3J0LnByb3RvIiQKEUNhbmNlbFBsYW5SZXF1ZXN0",
            "Eg8KB3BsYW5faWQYASABKAkiFAoSQ2FuY2VsUGxhblJlc3BvbnNlIowBChBM",
            "aXN0UGxhbnNSZXF1ZXN0EhkKEWdyb3VuZF9zdGF0aW9uX2lkGAEgASgJEi0K",
            "CWFvc19hZnRlchgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "LgoKYW9zX2JlZm9yZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXAiTAoRTGlzdFBsYW5zUmVzcG9uc2USNwoEcGxhbhgBIAMoCzIpLnN0ZWxs",
            "YXJzdGF0aW9uLmFwaS52MS5ncm91bmRzdGF0aW9uLlBsYW4i2AUKBFBsYW4S",
            "DwoHcGxhbl9pZBgBIAEoCRI1CgN0bGUYAiABKAsyKC5zdGVsbGFyc3RhdGlv",
            "bi5hcGkudjEuZ3JvdW5kc3RhdGlvbi5UbGUSLgoKc3RhcnRfdGltZRgHIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUYCCAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGFvc190aW1lGAMg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghsb3NfdGltZRgE",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASVAoVZG93bmxpbmtf",
            "cmFkaW9fZGV2aWNlGAUgASgLMjUuc3RlbGxhcnN0YXRpb24uYXBpLnYxLnJh",
            "ZGlvLlJhZGlvRGV2aWNlQ29uZmlndXJhdGlvbhJSChN1cGxpbmtfcmFkaW9f",
            "ZGV2aWNlGAYgASgLMjUuc3RlbGxhcnN0YXRpb24uYXBpLnYxLnJhZGlvLlJh",
            "ZGlvRGV2aWNlQ29uZmlndXJhdGlvbhJYChVzYXRlbGxpdGVfY29vcmRpbmF0",
            "ZXMYCSADKAsyOS5zdGVsbGFyc3RhdGlvbi5hcGkudjEuZ3JvdW5kc3RhdGlv",
            "bi5TYXRlbGxpdGVDb29yZGluYXRlcxIjChtzYXRlbGxpdGVfb3JnYW5pemF0",
            "aW9uX25hbWUYCiABKAkSKAogZ3JvdW5kX3N0YXRpb25fb3JnYW5pemF0aW9u",
            "X25hbWUYCyABKAkSGQoRZ3JvdW5kX3N0YXRpb25faWQYDSABKAkSEgoKdW5p",
            "dF9wcmljZRgMIAEoARIUCgxzYXRlbGxpdGVfaWQYDiABKAkSNgoLY2hhbm5l",
            "bF9zZXQYDyABKAsyIS5zdGVsbGFyc3RhdGlvbi5hcGkudjEuQ2hhbm5lbFNl",
            "dCIlCgNUbGUSDgoGbGluZV8xGAEgASgJEg4KBmxpbmVfMhgCIAEoCSKIAQoU",
            "U2F0ZWxsaXRlQ29vcmRpbmF0ZXMSKAoEdGltZRgBIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXASMgoFYW5nbGUYAiABKAsyIy5zdGVsbGFyc3Rh",
            "dGlvbi5hcGkudjEuY29tbW9uLkFuZ2xlEhIKCnJhbmdlX3JhdGUYAyABKAEi",
            "hwEKFFVuYXZhaWxhYmlsaXR5V2luZG93EhEKCXdpbmRvd19pZBgBIAEoCRIu",
            "CgpzdGFydF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIsCghlbmRfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXAimwEKIExpc3RVbmF2YWlsYWJpbGl0eVdpbmRvd3NSZXF1ZXN0EhkKEWdy",
            "b3VuZF9zdGF0aW9uX2lkGAEgASgJEi4KCnN0YXJ0X3RpbWUYAiABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAMgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJuCiFMaXN0VW5hdmFpbGFiaWxp",
            "dHlXaW5kb3dzUmVzcG9uc2USSQoGd2luZG93GAEgAygLMjkuc3RlbGxhcnN0",
            "YXRpb24uYXBpLnYxLmdyb3VuZHN0YXRpb24uVW5hdmFpbGFiaWxpdHlXaW5k",
            "b3cimQEKHkFkZFVuYXZhaWxhYmlsaXR5V2luZG93UmVxdWVzdBIZChFncm91",
            "bmRfc3RhdGlvbl9pZBgBIAEoCRIuCgpzdGFydF90aW1lGAIgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgDIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiNAofQWRkVW5hdmFpbGFiaWxpdHlX",
            "aW5kb3dSZXNwb25zZRIRCgl3aW5kb3dfaWQYASABKAkiNgohRGVsZXRlVW5h",
            "dmFpbGFiaWxpdHlXaW5kb3dSZXF1ZXN0EhEKCXdpbmRvd19pZBgBIAEoCSIk",
            "CiJEZWxldGVVbmF2YWlsYWJpbGl0eVdpbmRvd1Jlc3BvbnNlIuoBChpHcm91",
            "bmRTdGF0aW9uU3RyZWFtUmVxdWVzdBIZChFncm91bmRfc3RhdGlvbl9pZBgB",
            "IAEoCRISCgpzdHJlYW1fdGFnGAIgASgJElYKE3NhdGVsbGl0ZV90ZWxlbWV0",
            "cnkYAyABKAsyNy5zdGVsbGFyc3RhdGlvbi5hcGkudjEuZ3JvdW5kc3RhdGlv",
            "bi5TYXRlbGxpdGVUZWxlbWV0cnlIABI6CgxzdHJlYW1fZXZlbnQYBCABKAsy",
            "Ii5zdGVsbGFyc3RhdGlvbi5hcGkudjEuU3RyZWFtRXZlbnRIAEIJCgdSZXF1",
            "ZXN0IloKElNhdGVsbGl0ZVRlbGVtZXRyeRIPCgdwbGFuX2lkGAEgASgJEjMK",
            "CXRlbGVtZXRyeRgCIAEoCzIgLnN0ZWxsYXJzdGF0aW9uLmFwaS52MS5UZWxl",
            "bWV0cnkijwIKG0dyb3VuZFN0YXRpb25TdHJlYW1SZXNwb25zZRIPCgdwbGFu",
            "X2lkGAEgASgJEhMKC3Jlc3BvbnNlX2lkGAIgASgJElQKEnNhdGVsbGl0ZV9j",
            "b21tYW5kcxgDIAEoCzI2LnN0ZWxsYXJzdGF0aW9uLmFwaS52MS5ncm91bmRz",
            "dGF0aW9uLlNhdGVsbGl0ZUNvbW1hbmRzSAASaAokZ3JvdW5kX3N0YXRpb25f",
            "Y29uZmlndXJhdGlvbl9yZXF1ZXN0GAQgASgLMjguc3RlbGxhcnN0YXRpb24u",
            "YXBpLnYxLkdyb3VuZFN0YXRpb25Db25maWd1cmF0aW9uUmVxdWVzdEgAQgoK",
            "CFJlc3BvbnNlIiQKEVNhdGVsbGl0ZUNvbW1hbmRzEg8KB2NvbW1hbmQYASAD",
            "KAwyuAcKFEdyb3VuZFN0YXRpb25TZXJ2aWNlEqQBChdBZGRVbmF2YWlsYWJp",
            "bGl0eVdpbmRvdxJDLnN0ZWxsYXJzdGF0aW9uLmFwaS52MS5ncm91bmRzdGF0",
            "aW9uLkFkZFVuYXZhaWxhYmlsaXR5V2luZG93UmVxdWVzdBpELnN0ZWxsYXJz",
            "dGF0aW9uLmFwaS52MS5ncm91bmRzdGF0aW9uLkFkZFVuYXZhaWxhYmlsaXR5",
            "V2luZG93UmVzcG9uc2USfQoKQ2FuY2VsUGxhbhI2LnN0ZWxsYXJzdGF0aW9u",
            "LmFwaS52MS5ncm91bmRzdGF0aW9uLkNhbmNlbFBsYW5SZXF1ZXN0Gjcuc3Rl",
            "bGxhcnN0YXRpb24uYXBpLnYxLmdyb3VuZHN0YXRpb24uQ2FuY2VsUGxhblJl",
            "c3BvbnNlEq0BChpEZWxldGVVbmF2YWlsYWJpbGl0eVdpbmRvdxJGLnN0ZWxs",
            "YXJzdGF0aW9uLmFwaS52MS5ncm91bmRzdGF0aW9uLkRlbGV0ZVVuYXZhaWxh",
            "YmlsaXR5V2luZG93UmVxdWVzdBpHLnN0ZWxsYXJzdGF0aW9uLmFwaS52MS5n",
            "cm91bmRzdGF0aW9uLkRlbGV0ZVVuYXZhaWxhYmlsaXR5V2luZG93UmVzcG9u",
            "c2USegoJTGlzdFBsYW5zEjUuc3RlbGxhcnN0YXRpb24uYXBpLnYxLmdyb3Vu",
            "ZHN0YXRpb24uTGlzdFBsYW5zUmVxdWVzdBo2LnN0ZWxsYXJzdGF0aW9uLmFw",
            "aS52MS5ncm91bmRzdGF0aW9uLkxpc3RQbGFuc1Jlc3BvbnNlEqoBChlMaXN0",
            "VW5hdmFpbGFiaWxpdHlXaW5kb3dzEkUuc3RlbGxhcnN0YXRpb24uYXBpLnYx",
            "Lmdyb3VuZHN0YXRpb24uTGlzdFVuYXZhaWxhYmlsaXR5V2luZG93c1JlcXVl",
            "c3QaRi5zdGVsbGFyc3RhdGlvbi5hcGkudjEuZ3JvdW5kc3RhdGlvbi5MaXN0",
            "VW5hdmFpbGFiaWxpdHlXaW5kb3dzUmVzcG9uc2USoAEKF09wZW5Hcm91bmRT",
            "dGF0aW9uU3RyZWFtEj8uc3RlbGxhcnN0YXRpb24uYXBpLnYxLmdyb3VuZHN0",
            "YXRpb24uR3JvdW5kU3RhdGlvblN0cmVhbVJlcXVlc3QaQC5zdGVsbGFyc3Rh",
            "dGlvbi5hcGkudjEuZ3JvdW5kc3RhdGlvbi5Hcm91bmRTdGF0aW9uU3RyZWFt",
            "UmVzcG9uc2UoATABQoEBCidjb20uc3RlbGxhcnN0YXRpb24uYXBpLnYxLmdy",
            "b3VuZHN0YXRpb25CEkdyb3VuZFN0YXRpb25Qcm90b1ABWkBnaXRodWIuY29t",
            "L2luZm9zdGVsbGFyaW5jL2dvLXN0ZWxsYXJzdGF0aW9uL2FwaS92MS9ncm91",
            "bmRzdGF0aW9uYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Stellarstation.Api.V1.Common.CommonReflection.Descriptor, global::Stellarstation.Api.V1.Radio.RadioReflection.Descriptor, global::Stellarstation.Api.V1.StellarstationReflection.Descriptor, global::Stellarstation.Api.V1.TransportReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.CancelPlanRequest), global::Stellarstation.Api.V1.Groundstation.CancelPlanRequest.Parser, new[]{ "PlanId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.CancelPlanResponse), global::Stellarstation.Api.V1.Groundstation.CancelPlanResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.ListPlansRequest), global::Stellarstation.Api.V1.Groundstation.ListPlansRequest.Parser, new[]{ "GroundStationId", "AosAfter", "AosBefore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.ListPlansResponse), global::Stellarstation.Api.V1.Groundstation.ListPlansResponse.Parser, new[]{ "Plan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.Plan), global::Stellarstation.Api.V1.Groundstation.Plan.Parser, new[]{ "PlanId", "Tle", "StartTime", "EndTime", "AosTime", "LosTime", "DownlinkRadioDevice", "UplinkRadioDevice", "SatelliteCoordinates", "SatelliteOrganizationName", "GroundStationOrganizationName", "GroundStationId", "UnitPrice", "SatelliteId", "ChannelSet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.Tle), global::Stellarstation.Api.V1.Groundstation.Tle.Parser, new[]{ "Line1", "Line2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.SatelliteCoordinates), global::Stellarstation.Api.V1.Groundstation.SatelliteCoordinates.Parser, new[]{ "Time", "Angle", "RangeRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.UnavailabilityWindow), global::Stellarstation.Api.V1.Groundstation.UnavailabilityWindow.Parser, new[]{ "WindowId", "StartTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.ListUnavailabilityWindowsRequest), global::Stellarstation.Api.V1.Groundstation.ListUnavailabilityWindowsRequest.Parser, new[]{ "GroundStationId", "StartTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.ListUnavailabilityWindowsResponse), global::Stellarstation.Api.V1.Groundstation.ListUnavailabilityWindowsResponse.Parser, new[]{ "Window" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.AddUnavailabilityWindowRequest), global::Stellarstation.Api.V1.Groundstation.AddUnavailabilityWindowRequest.Parser, new[]{ "GroundStationId", "StartTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.AddUnavailabilityWindowResponse), global::Stellarstation.Api.V1.Groundstation.AddUnavailabilityWindowResponse.Parser, new[]{ "WindowId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.DeleteUnavailabilityWindowRequest), global::Stellarstation.Api.V1.Groundstation.DeleteUnavailabilityWindowRequest.Parser, new[]{ "WindowId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.DeleteUnavailabilityWindowResponse), global::Stellarstation.Api.V1.Groundstation.DeleteUnavailabilityWindowResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.GroundStationStreamRequest), global::Stellarstation.Api.V1.Groundstation.GroundStationStreamRequest.Parser, new[]{ "GroundStationId", "StreamTag", "SatelliteTelemetry", "StreamEvent" }, new[]{ "Request" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.SatelliteTelemetry), global::Stellarstation.Api.V1.Groundstation.SatelliteTelemetry.Parser, new[]{ "PlanId", "Telemetry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.GroundStationStreamResponse), global::Stellarstation.Api.V1.Groundstation.GroundStationStreamResponse.Parser, new[]{ "PlanId", "ResponseId", "SatelliteCommands", "GroundStationConfigurationRequest" }, new[]{ "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Stellarstation.Api.V1.Groundstation.SatelliteCommands), global::Stellarstation.Api.V1.Groundstation.SatelliteCommands.Parser, new[]{ "Command" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request for the `CancelPlan` method.
  /// </summary>
  public sealed partial class CancelPlanRequest : pb::IMessage<CancelPlanRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelPlanRequest> _parser = new pb::MessageParser<CancelPlanRequest>(() => new CancelPlanRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelPlanRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelPlanRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelPlanRequest(CancelPlanRequest other) : this() {
      planId_ = other.planId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelPlanRequest Clone() {
      return new CancelPlanRequest(this);
    }

    /// <summary>Field number for the "plan_id" field.</summary>
    public const int PlanIdFieldNumber = 1;
    private string planId_ = "";
    /// <summary>
    /// The id of the plan to cancel, i.e., the value of `Plan.id`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlanId {
      get { return planId_; }
      set {
        planId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelPlanRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelPlanRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlanId != other.PlanId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlanId.Length != 0) hash ^= PlanId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlanId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlanId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlanId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlanId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlanId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlanId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelPlanRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlanId.Length != 0) {
        PlanId = other.PlanId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlanId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlanId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for the `CancelPlan` method.
  /// </summary>
  public sealed partial class CancelPlanResponse : pb::IMessage<CancelPlanResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelPlanResponse> _parser = new pb::MessageParser<CancelPlanResponse>(() => new CancelPlanResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelPlanResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelPlanResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelPlanResponse(CancelPlanResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelPlanResponse Clone() {
      return new CancelPlanResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelPlanResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelPlanResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelPlanResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `ListPlans` method.
  /// </summary>
  public sealed partial class ListPlansRequest : pb::IMessage<ListPlansRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPlansRequest> _parser = new pb::MessageParser<ListPlansRequest>(() => new ListPlansRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPlansRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlansRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlansRequest(ListPlansRequest other) : this() {
      groundStationId_ = other.groundStationId_;
      aosAfter_ = other.aosAfter_ != null ? other.aosAfter_.Clone() : null;
      aosBefore_ = other.aosBefore_ != null ? other.aosBefore_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlansRequest Clone() {
      return new ListPlansRequest(this);
    }

    /// <summary>Field number for the "ground_station_id" field.</summary>
    public const int GroundStationIdFieldNumber = 1;
    private string groundStationId_ = "";
    /// <summary>
    /// The ID of the ground station to list plans for. The ID can be found on the StellarStation
    /// Console page for the ground station.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroundStationId {
      get { return groundStationId_; }
      set {
        groundStationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aos_after" field.</summary>
    public const int AosAfterFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp aosAfter_;
    /// <summary>
    /// The start time of the range of plans to list (inclusive). Only plans with an Acquisition of
    /// Signal (AOS) at or after this time will be returned. It is an error for the duration between
    /// `aos_after` and `aos_before` to be longer than 31 days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AosAfter {
      get { return aosAfter_; }
      set {
        aosAfter_ = value;
      }
    }

    /// <summary>Field number for the "aos_before" field.</summary>
    public const int AosBeforeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp aosBefore_;
    /// <summary>
    /// The end time of the range of plans to list (exclusive). Only plans with an Acquisition of
    /// Signal (AOS) before this time will be returned. It is an error for the duration between
    /// `aos_after` and `aos_before` to be longer than 31 days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AosBefore {
      get { return aosBefore_; }
      set {
        aosBefore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPlansRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPlansRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroundStationId != other.GroundStationId) return false;
      if (!object.Equals(AosAfter, other.AosAfter)) return false;
      if (!object.Equals(AosBefore, other.AosBefore)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroundStationId.Length != 0) hash ^= GroundStationId.GetHashCode();
      if (aosAfter_ != null) hash ^= AosAfter.GetHashCode();
      if (aosBefore_ != null) hash ^= AosBefore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroundStationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroundStationId);
      }
      if (aosAfter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AosAfter);
      }
      if (aosBefore_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AosBefore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroundStationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroundStationId);
      }
      if (aosAfter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AosAfter);
      }
      if (aosBefore_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AosBefore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroundStationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroundStationId);
      }
      if (aosAfter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AosAfter);
      }
      if (aosBefore_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AosBefore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPlansRequest other) {
      if (other == null) {
        return;
      }
      if (other.GroundStationId.Length != 0) {
        GroundStationId = other.GroundStationId;
      }
      if (other.aosAfter_ != null) {
        if (aosAfter_ == null) {
          AosAfter = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AosAfter.MergeFrom(other.AosAfter);
      }
      if (other.aosBefore_ != null) {
        if (aosBefore_ == null) {
          AosBefore = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AosBefore.MergeFrom(other.AosBefore);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroundStationId = input.ReadString();
            break;
          }
          case 18: {
            if (aosAfter_ == null) {
              AosAfter = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AosAfter);
            break;
          }
          case 26: {
            if (aosBefore_ == null) {
              AosBefore = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AosBefore);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroundStationId = input.ReadString();
            break;
          }
          case 18: {
            if (aosAfter_ == null) {
              AosAfter = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AosAfter);
            break;
          }
          case 26: {
            if (aosBefore_ == null) {
              AosBefore = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AosBefore);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A response from the `ListPlans` method.
  /// </summary>
  public sealed partial class ListPlansResponse : pb::IMessage<ListPlansResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPlansResponse> _parser = new pb::MessageParser<ListPlansResponse>(() => new ListPlansResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPlansResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlansResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlansResponse(ListPlansResponse other) : this() {
      plan_ = other.plan_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlansResponse Clone() {
      return new ListPlansResponse(this);
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Stellarstation.Api.V1.Groundstation.Plan> _repeated_plan_codec
        = pb::FieldCodec.ForMessage(10, global::Stellarstation.Api.V1.Groundstation.Plan.Parser);
    private readonly pbc::RepeatedField<global::Stellarstation.Api.V1.Groundstation.Plan> plan_ = new pbc::RepeatedField<global::Stellarstation.Api.V1.Groundstation.Plan>();
    /// <summary>
    /// The requested list of plans for the ground station.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Stellarstation.Api.V1.Groundstation.Plan> Plan {
      get { return plan_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPlansResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPlansResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!plan_.Equals(other.plan_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= plan_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      plan_.WriteTo(output, _repeated_plan_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      plan_.WriteTo(ref output, _repeated_plan_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += plan_.CalculateSize(_repeated_plan_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPlansResponse other) {
      if (other == null) {
        return;
      }
      plan_.Add(other.plan_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            plan_.AddEntriesFrom(input, _repeated_plan_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            plan_.AddEntriesFrom(ref input, _repeated_plan_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A scheduled pass. The plan will be executed on its ground station to communicate with its satellite
  /// during a time range between AOS and LOS, unless explicitly cancelled.
  ///
  /// Next ID: 16
  /// </summary>
  public sealed partial class Plan : pb::IMessage<Plan>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Plan> _parser = new pb::MessageParser<Plan>(() => new Plan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Plan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Plan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Plan(Plan other) : this() {
      planId_ = other.planId_;
      tle_ = other.tle_ != null ? other.tle_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      aosTime_ = other.aosTime_ != null ? other.aosTime_.Clone() : null;
      losTime_ = other.losTime_ != null ? other.losTime_.Clone() : null;
      downlinkRadioDevice_ = other.downlinkRadioDevice_ != null ? other.downlinkRadioDevice_.Clone() : null;
      uplinkRadioDevice_ = other.uplinkRadioDevice_ != null ? other.uplinkRadioDevice_.Clone() : null;
      satelliteCoordinates_ = other.satelliteCoordinates_.Clone();
      satelliteOrganizationName_ = other.satelliteOrganizationName_;
      groundStationOrganizationName_ = other.groundStationOrganizationName_;
      groundStationId_ = other.groundStationId_;
      unitPrice_ = other.unitPrice_;
      satelliteId_ = other.satelliteId_;
      channelSet_ = other.channelSet_ != null ? other.channelSet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Plan Clone() {
      return new Plan(this);
    }

    /// <summary>Field number for the "plan_id" field.</summary>
    public const int PlanIdFieldNumber = 1;
    private string planId_ = "";
    /// <summary>
    /// The ID of this plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlanId {
      get { return planId_; }
      set {
        planId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tle" field.</summary>
    public const int TleFieldNumber = 2;
    private global::Stellarstation.Api.V1.Groundstation.Tle tle_;
    /// <summary>
    /// The TLE for the satellite in this plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Stellarstation.Api.V1.Groundstation.Tle Tle {
      get { return tle_; }
      set {
        tle_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The start of the time window reserved for the plan.
    ///
    /// This timestamp does not change over time, and is set to allow sufficient time at the start
    /// of a plan to allow the ground station to prepare for plan execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The end of the time window reserved for the plan.
    ///
    /// This timestamp does not change over time, and is set to allow sufficient time at the end
    /// of a plan to allow the ground station to perform cleanup tasks after executing the plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "aos_time" field.</summary>
    public const int AosTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp aosTime_;
    /// <summary>
    /// The time of AOS between the ground station and satellite in this plan.
    ///
    /// This timestamp will never be before 'start_time'. If may change over time (for example, if
    /// updated TLE becomes available).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AosTime {
      get { return aosTime_; }
      set {
        aosTime_ = value;
      }
    }

    /// <summary>Field number for the "los_time" field.</summary>
    public const int LosTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp losTime_;
    /// <summary>
    /// The time of LOS between the ground station and satellite in this plan.
    ///
    /// This timestamp will never be after 'end_time'. If may change over time (for example, if
    /// updated TLE becomes available).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LosTime {
      get { return losTime_; }
      set {
        losTime_ = value;
      }
    }

    /// <summary>Field number for the "downlink_radio_device" field.</summary>
    public const int DownlinkRadioDeviceFieldNumber = 5;
    private global::Stellarstation.Api.V1.Radio.RadioDeviceConfiguration downlinkRadioDevice_;
    /// <summary>
    /// Configuration of the radio device used for downlinking from the satellite. Ground stations will
    /// need to configure reception during the plan to match this device.
    ///
    /// Deprecated. Use channel_set.downlink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Stellarstation.Api.V1.Radio.RadioDeviceConfiguration DownlinkRadioDevice {
      get { return downlinkRadioDevice_; }
      set {
        downlinkRadioDevice_ = value;
      }
    }

    /// <summary>Field number for the "uplink_radio_device" field.</summary>
    public const int UplinkRadioDeviceFieldNumber = 6;
    private global::Stellarstation.Api.V1.Radio.RadioDeviceConfiguration uplinkRadioDevice_;
    /// <summary>
    /// Configuration of the radio device used for uplinking to the satellite. Ground stations will
    /// need to configure transmission during the plan to match this device.
    ///
    /// Deprecated. Use channel_set.uplink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Stellarstation.Api.V1.Radio.RadioDeviceConfiguration UplinkRadioDevice {
      get { return uplinkRadioDevice_; }
      set {
        uplinkRadioDevice_ = value;
      }
    }

    /// <summary>Field number for the "satellite_coordinates" field.</summary>
    public const int SatelliteCoordinatesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Stellarstation.Api.V1.Groundstation.SatelliteCoordinates> _repeated_satelliteCoordinates_codec
        = pb::FieldCodec.ForMessage(74, global::Stellarstation.Api.V1.Groundstation.SatelliteCoordinates.Parser);
    private readonly pbc::RepeatedField<global::Stellarstation.Api.V1.Groundstation.SatelliteCoordinates> satelliteCoordinates_ = new pbc::RepeatedField<global::Stellarstation.Api.V1.Groundstation.SatelliteCoordinates>();
    /// <summary>
    /// Predicted coordinates of the tracked satellite for every second between AOS and LOS. This
    /// information is intended for calculating device states such as rotator angles and radio
    /// frequencies.
    ///
    /// This field is only populated for future plans.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Stellarstation.Api.V1.Groundstation.SatelliteCoordinates> SatelliteCoordinates {
      get { return satelliteCoordinates_; }
    }

    /// <summary>Field number for the "satellite_organization_name" field.</summary>
    public const int SatelliteOrganizationNameFieldNumber = 10;
    private string satelliteOrganizationName_ = "";
    /// <summary>
    /// The organization name of the satellite to be tracked in the plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SatelliteOrganizationName {
      get { return satelliteOrganizationName_; }
      set {
        satelliteOrganizationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ground_station_organization_name" field.</summary>
    public const int GroundStationOrganizationNameFieldNumber = 11;
    private string groundStationOrganizationName_ = "";
    /// <summary>
    /// The organization name of the ground station.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroundStationOrganizationName {
      get { return groundStationOrganizationName_; }
      set {
        groundStationOrganizationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ground_station_id" field.</summary>
    public const int GroundStationIdFieldNumber = 13;
    private string groundStationId_ = "";
    /// <summary>
    /// The ID of the ground station.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroundStationId {
      get { return groundStationId_; }
      set {
        groundStationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unit_price" field.</summary>
    public const int UnitPriceFieldNumber = 12;
    private double unitPrice_;
    /// <summary>
    /// The price per minute (USD) for this plan set by the ground station owner at the time of reservation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double UnitPrice {
      get { return unitPrice_; }
      set {
        unitPrice_ = value;
      }
    }

    /// <summary>Field number for the "satellite_id" field.</summary>
    public const int SatelliteIdFieldNumber = 14;
    private string satelliteId_ = "";
    /// <summary>
    /// The id of the satellite to be tracked in the plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SatelliteId {
      get { return satelliteId_; }
      set {
        satelliteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel_set" field.</summary>
    public const int ChannelSetFieldNumber = 15;
    private global::Stellarstation.Api.V1.ChannelSet channelSet_;
    /// <summary>
    /// The channel set used to reserve this plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Stellarstation.Api.V1.ChannelSet ChannelSet {
      get { return channelSet_; }
      set {
        channelSet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Plan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Plan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlanId != other.PlanId) return false;
      if (!object.Equals(Tle, other.Tle)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (!object.Equals(AosTime, other.AosTime)) return false;
      if (!object.Equals(LosTime, other.LosTime)) return false;
      if (!object.Equals(DownlinkRadioDevice, other.DownlinkRadioDevice)) return false;
      if (!object.Equals(UplinkRadioDevice, other.UplinkRadioDevice)) return false;
      if(!satelliteCoordinates_.Equals(other.satelliteCoordinates_)) return false;
      if (SatelliteOrganizationName != other.SatelliteOrganizationName) return false;
      if (GroundStationOrganizationName != other.GroundStationOrganizationName) return false;
      if (GroundStationId != other.GroundStationId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnitPrice, other.UnitPrice)) return false;
      if (SatelliteId != other.SatelliteId) return false;
      if (!object.Equals(ChannelSet, other.ChannelSet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlanId.Length != 0) hash ^= PlanId.GetHashCode();
      if (tle_ != null) hash ^= Tle.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (aosTime_ != null) hash ^= AosTime.GetHashCode();
      if (losTime_ != null) hash ^= LosTime.GetHashCode();
      if (downlinkRadioDevice_ != null) hash ^= DownlinkRadioDevice.GetHashCode();
      if (uplinkRadioDevice_ != null) hash ^= UplinkRadioDevice.GetHashCode();
      hash ^= satelliteCoordinates_.GetHashCode();
      if (SatelliteOrganizationName.Length != 0) hash ^= SatelliteOrganizationName.GetHashCode();
      if (GroundStationOrganizationName.Length != 0) hash ^= GroundStationOrganizationName.GetHashCode();
      if (GroundStationId.Length != 0) hash ^= GroundStationId.GetHashCode();
      if (UnitPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnitPrice);
      if (SatelliteId.Length != 0) hash ^= SatelliteId.GetHashCode();
      if (channelSet_ != null) hash ^= ChannelSet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlanId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlanId);
      }
      if (tle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Tle);
      }
      if (aosTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AosTime);
      }
      if (losTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LosTime);
      }
      if (downlinkRadioDevice_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DownlinkRadioDevice);
      }
      if (uplinkRadioDevice_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UplinkRadioDevice);
      }
      if (startTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTime);
      }
      satelliteCoordinates_.WriteTo(output, _repeated_satelliteCoordinates_codec);
      if (SatelliteOrganizationName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SatelliteOrganizationName);
      }
      if (GroundStationOrganizationName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(GroundStationOrganizationName);
      }
      if (UnitPrice != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(UnitPrice);
      }
      if (GroundStationId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(GroundStationId);
      }
      if (SatelliteId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SatelliteId);
      }
      if (channelSet_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ChannelSet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlanId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlanId);
      }
      if (tle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Tle);
      }
      if (aosTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AosTime);
      }
      if (losTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LosTime);
      }
      if (downlinkRadioDevice_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DownlinkRadioDevice);
      }
      if (uplinkRadioDevice_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UplinkRadioDevice);
      }
      if (startTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTime);
      }
      satelliteCoordinates_.WriteTo(ref output, _repeated_satelliteCoordinates_codec);
      if (SatelliteOrganizationName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SatelliteOrganizationName);
      }
      if (GroundStationOrganizationName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(GroundStationOrganizationName);
      }
      if (UnitPrice != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(UnitPrice);
      }
      if (GroundStationId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(GroundStationId);
      }
      if (SatelliteId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SatelliteId);
      }
      if (channelSet_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ChannelSet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlanId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlanId);
      }
      if (tle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tle);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (aosTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AosTime);
      }
      if (losTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LosTime);
      }
      if (downlinkRadioDevice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownlinkRadioDevice);
      }
      if (uplinkRadioDevice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UplinkRadioDevice);
      }
      size += satelliteCoordinates_.CalculateSize(_repeated_satelliteCoordinates_codec);
      if (SatelliteOrganizationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SatelliteOrganizationName);
      }
      if (GroundStationOrganizationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroundStationOrganizationName);
      }
      if (GroundStationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroundStationId);
      }
      if (UnitPrice != 0D) {
        size += 1 + 8;
      }
      if (SatelliteId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SatelliteId);
      }
      if (channelSet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChannelSet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Plan other) {
      if (other == null) {
        return;
      }
      if (other.PlanId.Length != 0) {
        PlanId = other.PlanId;
      }
      if (other.tle_ != null) {
        if (tle_ == null) {
          Tle = new global::Stellarstation.Api.V1.Groundstation.Tle();
        }
        Tle.MergeFrom(other.Tle);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.aosTime_ != null) {
        if (aosTime_ == null) {
          AosTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AosTime.MergeFrom(other.AosTime);
      }
      if (other.losTime_ != null) {
        if (losTime_ == null) {
          LosTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LosTime.MergeFrom(other.LosTime);
      }
      if (other.downlinkRadioDevice_ != null) {
        if (downlinkRadioDevice_ == null) {
          DownlinkRadioDevice = new global::Stellarstation.Api.V1.Radio.RadioDeviceConfiguration();
        }
        DownlinkRadioDevice.MergeFrom(other.DownlinkRadioDevice);
      }
      if (other.uplinkRadioDevice_ != null) {
        if (uplinkRadioDevice_ == null) {
          UplinkRadioDevice = new global::Stellarstation.Api.V1.Radio.RadioDeviceConfiguration();
        }
        UplinkRadioDevice.MergeFrom(other.UplinkRadioDevice);
      }
      satelliteCoordinates_.Add(other.satelliteCoordinates_);
      if (other.SatelliteOrganizationName.Length != 0) {
        SatelliteOrganizationName = other.SatelliteOrganizationName;
      }
      if (other.GroundStationOrganizationName.Length != 0) {
        GroundStationOrganizationName = other.GroundStationOrganizationName;
      }
      if (other.GroundStationId.Length != 0) {
        GroundStationId = other.GroundStationId;
      }
      if (other.UnitPrice != 0D) {
        UnitPrice = other.UnitPrice;
      }
      if (other.SatelliteId.Length != 0) {
        SatelliteId = other.SatelliteId;
      }
      if (other.channelSet_ != null) {
        if (channelSet_ == null) {
          ChannelSet = new global::Stellarstation.Api.V1.ChannelSet();
        }
        ChannelSet.MergeFrom(other.ChannelSet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlanId = input.ReadString();
            break;
          }
          case 18: {
            if (tle_ == null) {
              Tle = new global::Stellarstation.Api.V1.Groundstation.Tle();
            }
            input.ReadMessage(Tle);
            break;
          }
          case 26: {
            if (aosTime_ == null) {
              AosTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AosTime);
            break;
          }
          case 34: {
            if (losTime_ == null) {
              LosTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LosTime);
            break;
          }
          case 42: {
            if (downlinkRadioDevice_ == null) {
              DownlinkRadioDevice = new global::Stellarstation.Api.V1.Radio.RadioDeviceConfiguration();
            }
            input.ReadMessage(DownlinkRadioDevice);
            break;
          }
          case 50: {
            if (uplinkRadioDevice_ == null) {
              UplinkRadioDevice = new global::Stellarstation.Api.V1.Radio.RadioDeviceConfiguration();
            }
            input.ReadMessage(UplinkRadioDevice);
            break;
          }
          case 58: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 66: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 74: {
            satelliteCoordinates_.AddEntriesFrom(input, _repeated_satelliteCoordinates_codec);
            break;
          }
          case 82: {
            SatelliteOrganizationName = input.ReadString();
            break;
          }
          case 90: {
            GroundStationOrganizationName = input.ReadString();
            break;
          }
          case 97: {
            UnitPrice = input.ReadDouble();
            break;
          }
          case 106: {
            GroundStationId = input.ReadString();
            break;
          }
          case 114: {
            SatelliteId = input.ReadString();
            break;
          }
          case 122: {
            if (channelSet_ == null) {
              ChannelSet = new global::Stellarstation.Api.V1.ChannelSet();
            }
            input.ReadMessage(ChannelSet);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlanId = input.ReadString();
            break;
          }
          case 18: {
            if (tle_ == null) {
              Tle = new global::Stellarstation.Api.V1.Groundstation.Tle();
            }
            input.ReadMessage(Tle);
            break;
          }
          case 26: {
            if (aosTime_ == null) {
              AosTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AosTime);
            break;
          }
          case 34: {
            if (losTime_ == null) {
              LosTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LosTime);
            break;
          }
          case 42: {
            if (downlinkRadioDevice_ == null) {
              DownlinkRadioDevice = new global::Stellarstation.Api.V1.Radio.RadioDeviceConfiguration();
            }
            input.ReadMessage(DownlinkRadioDevice);
            break;
          }
          case 50: {
            if (uplinkRadioDevice_ == null) {
              UplinkRadioDevice = new global::Stellarstation.Api.V1.Radio.RadioDeviceConfiguration();
            }
            input.ReadMessage(UplinkRadioDevice);
            break;
          }
          case 58: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 66: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 74: {
            satelliteCoordinates_.AddEntriesFrom(ref input, _repeated_satelliteCoordinates_codec);
            break;
          }
          case 82: {
            SatelliteOrganizationName = input.ReadString();
            break;
          }
          case 90: {
            GroundStationOrganizationName = input.ReadString();
            break;
          }
          case 97: {
            UnitPrice = input.ReadDouble();
            break;
          }
          case 106: {
            GroundStationId = input.ReadString();
            break;
          }
          case 114: {
            SatelliteId = input.ReadString();
            break;
          }
          case 122: {
            if (channelSet_ == null) {
              ChannelSet = new global::Stellarstation.Api.V1.ChannelSet();
            }
            input.ReadMessage(ChannelSet);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Unparsed TLE data for a satellite - https://en.wikipedia.org/wiki/Two-line_element_set
  /// </summary>
  public sealed partial class Tle : pb::IMessage<Tle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tle> _parser = new pb::MessageParser<Tle>(() => new Tle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tle(Tle other) : this() {
      line1_ = other.line1_;
      line2_ = other.line2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tle Clone() {
      return new Tle(this);
    }

    /// <summary>Field number for the "line_1" field.</summary>
    public const int Line1FieldNumber = 1;
    private string line1_ = "";
    /// <summary>
    /// The first line of the TLE. Not a title line.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Line1 {
      get { return line1_; }
      set {
        line1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "line_2" field.</summary>
    public const int Line2FieldNumber = 2;
    private string line2_ = "";
    /// <summary>
    /// The second line of the TLE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Line2 {
      get { return line2_; }
      set {
        line2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Line1 != other.Line1) return false;
      if (Line2 != other.Line2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Line1.Length != 0) hash ^= Line1.GetHashCode();
      if (Line2.Length != 0) hash ^= Line2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Line1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Line1);
      }
      if (Line2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Line2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Line1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Line1);
      }
      if (Line2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Line2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Line1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Line1);
      }
      if (Line2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Line2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tle other) {
      if (other == null) {
        return;
      }
      if (other.Line1.Length != 0) {
        Line1 = other.Line1;
      }
      if (other.Line2.Length != 0) {
        Line2 = other.Line2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Line1 = input.ReadString();
            break;
          }
          case 18: {
            Line2 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Line1 = input.ReadString();
            break;
          }
          case 18: {
            Line2 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Coordinates of a satellite observed from a ground station tracking it.
  /// </summary>
  public sealed partial class SatelliteCoordinates : pb::IMessage<SatelliteCoordinates>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SatelliteCoordinates> _parser = new pb::MessageParser<SatelliteCoordinates>(() => new SatelliteCoordinates());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SatelliteCoordinates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SatelliteCoordinates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SatelliteCoordinates(SatelliteCoordinates other) : this() {
      time_ = other.time_ != null ? other.time_.Clone() : null;
      angle_ = other.angle_ != null ? other.angle_.Clone() : null;
      rangeRate_ = other.rangeRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SatelliteCoordinates Clone() {
      return new SatelliteCoordinates(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    /// The time which the coordinates are for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 2;
    private global::Stellarstation.Api.V1.Common.Angle angle_;
    /// <summary>
    /// The angle of the satellite.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Stellarstation.Api.V1.Common.Angle Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "range_rate" field.</summary>
    public const int RangeRateFieldNumber = 3;
    private double rangeRate_;
    /// <summary>
    /// The range rate (change rate of distance) of the satellite. You can use this value to calculate
    /// Doppler shifted communication frequencies using the following formulae.
    ///   uplink:
    ///     shifted_freq = original_freq * (1.0 + range_rate / speed_of_light)
    ///   downlink:
    ///     shifted_freq = original_freq * (1.0 - range_rate / speed_of_light)
    ///   where speed_of_light is 299792458.0 m/s.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double RangeRate {
      get { return rangeRate_; }
      set {
        rangeRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SatelliteCoordinates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SatelliteCoordinates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(Angle, other.Angle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RangeRate, other.RangeRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (time_ != null) hash ^= Time.GetHashCode();
      if (angle_ != null) hash ^= Angle.GetHashCode();
      if (RangeRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RangeRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (time_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Time);
      }
      if (angle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Angle);
      }
      if (RangeRate != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(RangeRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (time_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Time);
      }
      if (angle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Angle);
      }
      if (RangeRate != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(RangeRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (angle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angle);
      }
      if (RangeRate != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SatelliteCoordinates other) {
      if (other == null) {
        return;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.angle_ != null) {
        if (angle_ == null) {
          Angle = new global::Stellarstation.Api.V1.Common.Angle();
        }
        Angle.MergeFrom(other.Angle);
      }
      if (other.RangeRate != 0D) {
        RangeRate = other.RangeRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 18: {
            if (angle_ == null) {
              Angle = new global::Stellarstation.Api.V1.Common.Angle();
            }
            input.ReadMessage(Angle);
            break;
          }
          case 25: {
            RangeRate = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 18: {
            if (angle_ == null) {
              Angle = new global::Stellarstation.Api.V1.Common.Angle();
            }
            input.ReadMessage(Angle);
            break;
          }
          case 25: {
            RangeRate = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A time window during which a ground station is unavailable e.g. for local maintenance.
  /// </summary>
  public sealed partial class UnavailabilityWindow : pb::IMessage<UnavailabilityWindow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnavailabilityWindow> _parser = new pb::MessageParser<UnavailabilityWindow>(() => new UnavailabilityWindow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnavailabilityWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnavailabilityWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnavailabilityWindow(UnavailabilityWindow other) : this() {
      windowId_ = other.windowId_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnavailabilityWindow Clone() {
      return new UnavailabilityWindow(this);
    }

    /// <summary>Field number for the "window_id" field.</summary>
    public const int WindowIdFieldNumber = 1;
    private string windowId_ = "";
    /// <summary>
    /// The ID of the unavailability window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WindowId {
      get { return windowId_; }
      set {
        windowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Start time of the unavailabilty window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// End time of the unavailability window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnavailabilityWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnavailabilityWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowId != other.WindowId) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowId.Length != 0) hash ^= WindowId.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WindowId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WindowId);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WindowId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WindowId);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WindowId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WindowId);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnavailabilityWindow other) {
      if (other == null) {
        return;
      }
      if (other.WindowId.Length != 0) {
        WindowId = other.WindowId;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WindowId = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WindowId = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request for a list of unavailability windows for the specified ground station that
  /// fall within the given time range.
  /// </summary>
  public sealed partial class ListUnavailabilityWindowsRequest : pb::IMessage<ListUnavailabilityWindowsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListUnavailabilityWindowsRequest> _parser = new pb::MessageParser<ListUnavailabilityWindowsRequest>(() => new ListUnavailabilityWindowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListUnavailabilityWindowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUnavailabilityWindowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUnavailabilityWindowsRequest(ListUnavailabilityWindowsRequest other) : this() {
      groundStationId_ = other.groundStationId_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUnavailabilityWindowsRequest Clone() {
      return new ListUnavailabilityWindowsRequest(this);
    }

    /// <summary>Field number for the "ground_station_id" field.</summary>
    public const int GroundStationIdFieldNumber = 1;
    private string groundStationId_ = "";
    /// <summary>
    /// ID of the ground station for which to retrieve unavailability windows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroundStationId {
      get { return groundStationId_; }
      set {
        groundStationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Start time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// End time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListUnavailabilityWindowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListUnavailabilityWindowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroundStationId != other.GroundStationId) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroundStationId.Length != 0) hash ^= GroundStationId.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroundStationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroundStationId);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroundStationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroundStationId);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroundStationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroundStationId);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListUnavailabilityWindowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.GroundStationId.Length != 0) {
        GroundStationId = other.GroundStationId;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroundStationId = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroundStationId = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A response containing unavailability windows for the requested ground station.
  /// </summary>
  public sealed partial class ListUnavailabilityWindowsResponse : pb::IMessage<ListUnavailabilityWindowsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListUnavailabilityWindowsResponse> _parser = new pb::MessageParser<ListUnavailabilityWindowsResponse>(() => new ListUnavailabilityWindowsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListUnavailabilityWindowsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUnavailabilityWindowsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUnavailabilityWindowsResponse(ListUnavailabilityWindowsResponse other) : this() {
      window_ = other.window_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUnavailabilityWindowsResponse Clone() {
      return new ListUnavailabilityWindowsResponse(this);
    }

    /// <summary>Field number for the "window" field.</summary>
    public const int WindowFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Stellarstation.Api.V1.Groundstation.UnavailabilityWindow> _repeated_window_codec
        = pb::FieldCodec.ForMessage(10, global::Stellarstation.Api.V1.Groundstation.UnavailabilityWindow.Parser);
    private readonly pbc::RepeatedField<global::Stellarstation.Api.V1.Groundstation.UnavailabilityWindow> window_ = new pbc::RepeatedField<global::Stellarstation.Api.V1.Groundstation.UnavailabilityWindow>();
    /// <summary>
    /// A list of unavailability windows, sorted in ascending order of the start time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Stellarstation.Api.V1.Groundstation.UnavailabilityWindow> Window {
      get { return window_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListUnavailabilityWindowsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListUnavailabilityWindowsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!window_.Equals(other.window_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= window_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      window_.WriteTo(output, _repeated_window_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      window_.WriteTo(ref output, _repeated_window_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += window_.CalculateSize(_repeated_window_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListUnavailabilityWindowsResponse other) {
      if (other == null) {
        return;
      }
      window_.Add(other.window_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            window_.AddEntriesFrom(input, _repeated_window_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            window_.AddEntriesFrom(ref input, _repeated_window_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request for adding a new unavailability window for the specified ground station.
  /// </summary>
  public sealed partial class AddUnavailabilityWindowRequest : pb::IMessage<AddUnavailabilityWindowRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddUnavailabilityWindowRequest> _parser = new pb::MessageParser<AddUnavailabilityWindowRequest>(() => new AddUnavailabilityWindowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddUnavailabilityWindowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUnavailabilityWindowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUnavailabilityWindowRequest(AddUnavailabilityWindowRequest other) : this() {
      groundStationId_ = other.groundStationId_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUnavailabilityWindowRequest Clone() {
      return new AddUnavailabilityWindowRequest(this);
    }

    /// <summary>Field number for the "ground_station_id" field.</summary>
    public const int GroundStationIdFieldNumber = 1;
    private string groundStationId_ = "";
    /// <summary>
    /// ID of the ground station to add a new unavailability window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroundStationId {
      get { return groundStationId_; }
      set {
        groundStationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Start time of the unavailabilty window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// End time of the unavailability window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddUnavailabilityWindowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddUnavailabilityWindowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroundStationId != other.GroundStationId) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroundStationId.Length != 0) hash ^= GroundStationId.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroundStationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroundStationId);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroundStationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroundStationId);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroundStationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroundStationId);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddUnavailabilityWindowRequest other) {
      if (other == null) {
        return;
      }
      if (other.GroundStationId.Length != 0) {
        GroundStationId = other.GroundStationId;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroundStationId = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroundStationId = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A response from the 'AddUnavailabilityWindow' method.
  /// </summary>
  public sealed partial class AddUnavailabilityWindowResponse : pb::IMessage<AddUnavailabilityWindowResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddUnavailabilityWindowResponse> _parser = new pb::MessageParser<AddUnavailabilityWindowResponse>(() => new AddUnavailabilityWindowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddUnavailabilityWindowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUnavailabilityWindowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUnavailabilityWindowResponse(AddUnavailabilityWindowResponse other) : this() {
      windowId_ = other.windowId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUnavailabilityWindowResponse Clone() {
      return new AddUnavailabilityWindowResponse(this);
    }

    /// <summary>Field number for the "window_id" field.</summary>
    public const int WindowIdFieldNumber = 1;
    private string windowId_ = "";
    /// <summary>
    /// ID of the new window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WindowId {
      get { return windowId_; }
      set {
        windowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddUnavailabilityWindowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddUnavailabilityWindowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowId != other.WindowId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowId.Length != 0) hash ^= WindowId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WindowId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WindowId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WindowId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WindowId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WindowId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WindowId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddUnavailabilityWindowResponse other) {
      if (other == null) {
        return;
      }
      if (other.WindowId.Length != 0) {
        WindowId = other.WindowId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WindowId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WindowId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request for deleting an existing unavailability window for the specified ground station.
  /// </summary>
  public sealed partial class DeleteUnavailabilityWindowRequest : pb::IMessage<DeleteUnavailabilityWindowRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteUnavailabilityWindowRequest> _parser = new pb::MessageParser<DeleteUnavailabilityWindowRequest>(() => new DeleteUnavailabilityWindowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteUnavailabilityWindowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteUnavailabilityWindowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteUnavailabilityWindowRequest(DeleteUnavailabilityWindowRequest other) : this() {
      windowId_ = other.windowId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteUnavailabilityWindowRequest Clone() {
      return new DeleteUnavailabilityWindowRequest(this);
    }

    /// <summary>Field number for the "window_id" field.</summary>
    public const int WindowIdFieldNumber = 1;
    private string windowId_ = "";
    /// <summary>
    /// ID of the unavailability window to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WindowId {
      get { return windowId_; }
      set {
        windowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteUnavailabilityWindowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteUnavailabilityWindowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowId != other.WindowId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowId.Length != 0) hash ^= WindowId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WindowId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WindowId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WindowId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WindowId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WindowId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WindowId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteUnavailabilityWindowRequest other) {
      if (other == null) {
        return;
      }
      if (other.WindowId.Length != 0) {
        WindowId = other.WindowId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WindowId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WindowId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A response to the request for deleting an existing unavailability window.
  /// </summary>
  public sealed partial class DeleteUnavailabilityWindowResponse : pb::IMessage<DeleteUnavailabilityWindowResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteUnavailabilityWindowResponse> _parser = new pb::MessageParser<DeleteUnavailabilityWindowResponse>(() => new DeleteUnavailabilityWindowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteUnavailabilityWindowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteUnavailabilityWindowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteUnavailabilityWindowResponse(DeleteUnavailabilityWindowResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteUnavailabilityWindowResponse Clone() {
      return new DeleteUnavailabilityWindowResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteUnavailabilityWindowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteUnavailabilityWindowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteUnavailabilityWindowResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request for the `OpenGroundStationStream` method.
  /// </summary>
  public sealed partial class GroundStationStreamRequest : pb::IMessage<GroundStationStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroundStationStreamRequest> _parser = new pb::MessageParser<GroundStationStreamRequest>(() => new GroundStationStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroundStationStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroundStationStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroundStationStreamRequest(GroundStationStreamRequest other) : this() {
      groundStationId_ = other.groundStationId_;
      streamTag_ = other.streamTag_;
      switch (other.RequestCase) {
        case RequestOneofCase.SatelliteTelemetry:
          SatelliteTelemetry = other.SatelliteTelemetry.Clone();
          break;
        case RequestOneofCase.StreamEvent:
          StreamEvent = other.StreamEvent.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroundStationStreamRequest Clone() {
      return new GroundStationStreamRequest(this);
    }

    /// <summary>Field number for the "ground_station_id" field.</summary>
    public const int GroundStationIdFieldNumber = 1;
    private string groundStationId_ = "";
    /// <summary>
    /// The ID of the ground station that is opening a stream. The ID of a ground station can be found
    /// on the StellarStation Console page for the ground station.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroundStationId {
      get { return groundStationId_; }
      set {
        groundStationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stream_tag" field.</summary>
    public const int StreamTagFieldNumber = 2;
    private string streamTag_ = "";
    /// <summary>
    /// A tag to identify this stream. This tag is not used semantically and is only for logging,
    /// monitoring, and debugging. This does not need to be set if there will only ever be one stream
    /// for a particular `ground_station_id` open at a time. If multiple streams will be open, this
    /// should be set to identify the stream. Some examples include 'uplink', 'downlink', 'uhf',
    /// 's-band'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StreamTag {
      get { return streamTag_; }
      set {
        streamTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "satellite_telemetry" field.</summary>
    public const int SatelliteTelemetryFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Stellarstation.Api.V1.Groundstation.SatelliteTelemetry SatelliteTelemetry {
      get { return requestCase_ == RequestOneofCase.SatelliteTelemetry ? (global::Stellarstation.Api.V1.Groundstation.SatelliteTelemetry) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.SatelliteTelemetry;
      }
    }

    /// <summary>Field number for the "stream_event" field.</summary>
    public const int StreamEventFieldNumber = 4;
    /// <summary>
    /// An event that occurred while processing the stream. Satellite operators will often use these
    /// events for debugging and monitoring.
    ///
    /// - `command_sent` must be returned right after completing transmission of
    ///    commands received in a `SendSatelliteCommandsResponse`.
    /// - `plan_monitoring_event.ground_station_configuration` must be returned once at the beginning
    ///   of the execution of a plan and contains information about the actual configuration of the
    ///   ground station at the time.
    /// - `plan_monitoring_event.ground_station_state` must be sent regularly throughout the
    ///   plan and contains real-time monitoring of the hardware of the ground station.
    /// - `plan_monitoring_event.ground_station_event` must be sent once at each of the transitions
    ///   documented in `PlanLifecycleEvent` when executing a plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Stellarstation.Api.V1.StreamEvent StreamEvent {
      get { return requestCase_ == RequestOneofCase.StreamEvent ? (global::Stellarstation.Api.V1.StreamEvent) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.StreamEvent;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "Request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      SatelliteTelemetry = 3,
      StreamEvent = 4,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroundStationStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroundStationStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroundStationId != other.GroundStationId) return false;
      if (StreamTag != other.StreamTag) return false;
      if (!object.Equals(SatelliteTelemetry, other.SatelliteTelemetry)) return false;
      if (!object.Equals(StreamEvent, other.StreamEvent)) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroundStationId.Length != 0) hash ^= GroundStationId.GetHashCode();
      if (StreamTag.Length != 0) hash ^= StreamTag.GetHashCode();
      if (requestCase_ == RequestOneofCase.SatelliteTelemetry) hash ^= SatelliteTelemetry.GetHashCode();
      if (requestCase_ == RequestOneofCase.StreamEvent) hash ^= StreamEvent.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroundStationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroundStationId);
      }
      if (StreamTag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StreamTag);
      }
      if (requestCase_ == RequestOneofCase.SatelliteTelemetry) {
        output.WriteRawTag(26);
        output.WriteMessage(SatelliteTelemetry);
      }
      if (requestCase_ == RequestOneofCase.StreamEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(StreamEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroundStationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroundStationId);
      }
      if (StreamTag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StreamTag);
      }
      if (requestCase_ == RequestOneofCase.SatelliteTelemetry) {
        output.WriteRawTag(26);
        output.WriteMessage(SatelliteTelemetry);
      }
      if (requestCase_ == RequestOneofCase.StreamEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(StreamEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroundStationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroundStationId);
      }
      if (StreamTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamTag);
      }
      if (requestCase_ == RequestOneofCase.SatelliteTelemetry) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SatelliteTelemetry);
      }
      if (requestCase_ == RequestOneofCase.StreamEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamEvent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroundStationStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.GroundStationId.Length != 0) {
        GroundStationId = other.GroundStationId;
      }
      if (other.StreamTag.Length != 0) {
        StreamTag = other.StreamTag;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.SatelliteTelemetry:
          if (SatelliteTelemetry == null) {
            SatelliteTelemetry = new global::Stellarstation.Api.V1.Groundstation.SatelliteTelemetry();
          }
          SatelliteTelemetry.MergeFrom(other.SatelliteTelemetry);
          break;
        case RequestOneofCase.StreamEvent:
          if (StreamEvent == null) {
            StreamEvent = new global::Stellarstation.Api.V1.StreamEvent();
          }
          StreamEvent.MergeFrom(other.StreamEvent);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroundStationId = input.ReadString();
            break;
          }
          case 18: {
            StreamTag = input.ReadString();
            break;
          }
          case 26: {
            global::Stellarstation.Api.V1.Groundstation.SatelliteTelemetry subBuilder = new global::Stellarstation.Api.V1.Groundstation.SatelliteTelemetry();
            if (requestCase_ == RequestOneofCase.SatelliteTelemetry) {
              subBuilder.MergeFrom(SatelliteTelemetry);
            }
            input.ReadMessage(subBuilder);
            SatelliteTelemetry = subBuilder;
            break;
          }
          case 34: {
            global::Stellarstation.Api.V1.StreamEvent subBuilder = new global::Stellarstation.Api.V1.StreamEvent();
            if (requestCase_ == RequestOneofCase.StreamEvent) {
              subBuilder.MergeFrom(StreamEvent);
            }
            input.ReadMessage(subBuilder);
            StreamEvent = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroundStationId = input.ReadString();
            break;
          }
          case 18: {
            StreamTag = input.ReadString();
            break;
          }
          case 26: {
            global::Stellarstation.Api.V1.Groundstation.SatelliteTelemetry subBuilder = new global::Stellarstation.Api.V1.Groundstation.SatelliteTelemetry();
            if (requestCase_ == RequestOneofCase.SatelliteTelemetry) {
              subBuilder.MergeFrom(SatelliteTelemetry);
            }
            input.ReadMessage(subBuilder);
            SatelliteTelemetry = subBuilder;
            break;
          }
          case 34: {
            global::Stellarstation.Api.V1.StreamEvent subBuilder = new global::Stellarstation.Api.V1.StreamEvent();
            if (requestCase_ == RequestOneofCase.StreamEvent) {
              subBuilder.MergeFrom(StreamEvent);
            }
            input.ReadMessage(subBuilder);
            StreamEvent = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Telemetry received from a satellite to send to a satellite operator.
  /// </summary>
  public sealed partial class SatelliteTelemetry : pb::IMessage<SatelliteTelemetry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SatelliteTelemetry> _parser = new pb::MessageParser<SatelliteTelemetry>(() => new SatelliteTelemetry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SatelliteTelemetry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SatelliteTelemetry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SatelliteTelemetry(SatelliteTelemetry other) : this() {
      planId_ = other.planId_;
      telemetry_ = other.telemetry_ != null ? other.telemetry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SatelliteTelemetry Clone() {
      return new SatelliteTelemetry(this);
    }

    /// <summary>Field number for the "plan_id" field.</summary>
    public const int PlanIdFieldNumber = 1;
    private string planId_ = "";
    /// <summary>
    /// The ID of the plan the telemetry is being sent for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlanId {
      get { return planId_; }
      set {
        planId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "telemetry" field.</summary>
    public const int TelemetryFieldNumber = 2;
    private global::Stellarstation.Api.V1.Telemetry telemetry_;
    /// <summary>
    /// The telemetry being sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Stellarstation.Api.V1.Telemetry Telemetry {
      get { return telemetry_; }
      set {
        telemetry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SatelliteTelemetry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SatelliteTelemetry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlanId != other.PlanId) return false;
      if (!object.Equals(Telemetry, other.Telemetry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlanId.Length != 0) hash ^= PlanId.GetHashCode();
      if (telemetry_ != null) hash ^= Telemetry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlanId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlanId);
      }
      if (telemetry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Telemetry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlanId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlanId);
      }
      if (telemetry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Telemetry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlanId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlanId);
      }
      if (telemetry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Telemetry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SatelliteTelemetry other) {
      if (other == null) {
        return;
      }
      if (other.PlanId.Length != 0) {
        PlanId = other.PlanId;
      }
      if (other.telemetry_ != null) {
        if (telemetry_ == null) {
          Telemetry = new global::Stellarstation.Api.V1.Telemetry();
        }
        Telemetry.MergeFrom(other.Telemetry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlanId = input.ReadString();
            break;
          }
          case 18: {
            if (telemetry_ == null) {
              Telemetry = new global::Stellarstation.Api.V1.Telemetry();
            }
            input.ReadMessage(Telemetry);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlanId = input.ReadString();
            break;
          }
          case 18: {
            if (telemetry_ == null) {
              Telemetry = new global::Stellarstation.Api.V1.Telemetry();
            }
            input.ReadMessage(Telemetry);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A response for the `OpenGroundStationStream` method. The ground station must process a response
  /// immediately when received on the stream.
  /// </summary>
  public sealed partial class GroundStationStreamResponse : pb::IMessage<GroundStationStreamResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroundStationStreamResponse> _parser = new pb::MessageParser<GroundStationStreamResponse>(() => new GroundStationStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroundStationStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroundStationStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroundStationStreamResponse(GroundStationStreamResponse other) : this() {
      planId_ = other.planId_;
      responseId_ = other.responseId_;
      switch (other.ResponseCase) {
        case ResponseOneofCase.SatelliteCommands:
          SatelliteCommands = other.SatelliteCommands.Clone();
          break;
        case ResponseOneofCase.GroundStationConfigurationRequest:
          GroundStationConfigurationRequest = other.GroundStationConfigurationRequest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroundStationStreamResponse Clone() {
      return new GroundStationStreamResponse(this);
    }

    /// <summary>Field number for the "plan_id" field.</summary>
    public const int PlanIdFieldNumber = 1;
    private string planId_ = "";
    /// <summary>
    /// The ID of the plan this response corresponds to. Unfilled if this response does not correspond
    /// to a plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlanId {
      get { return planId_; }
      set {
        planId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response_id" field.</summary>
    public const int ResponseIdFieldNumber = 2;
    private string responseId_ = "";
    /// <summary>
    /// A unique ID identifying this response. If filled, any `StreamEvent` generated when handling
    /// this GroundStationStreamResponse` must have this value copied into
    /// `StreamEvent.request_id`. Currently, this includes
    ///
    /// - Returning `CommandSentFromGroundStation` after completing transmission of the commands in a
    ///   `SendSatelliteCommandsResponse`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseId {
      get { return responseId_; }
      set {
        responseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "satellite_commands" field.</summary>
    public const int SatelliteCommandsFieldNumber = 3;
    /// <summary>
    /// Commands to send to the satellite.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Stellarstation.Api.V1.Groundstation.SatelliteCommands SatelliteCommands {
      get { return responseCase_ == ResponseOneofCase.SatelliteCommands ? (global::Stellarstation.Api.V1.Groundstation.SatelliteCommands) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.SatelliteCommands;
      }
    }

    /// <summary>Field number for the "ground_station_configuration_request" field.</summary>
    public const int GroundStationConfigurationRequestFieldNumber = 4;
    /// <summary>
    /// Request to configure ground station devices.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Stellarstation.Api.V1.GroundStationConfigurationRequest GroundStationConfigurationRequest {
      get { return responseCase_ == ResponseOneofCase.GroundStationConfigurationRequest ? (global::Stellarstation.Api.V1.GroundStationConfigurationRequest) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.GroundStationConfigurationRequest;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "Response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      SatelliteCommands = 3,
      GroundStationConfigurationRequest = 4,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroundStationStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroundStationStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlanId != other.PlanId) return false;
      if (ResponseId != other.ResponseId) return false;
      if (!object.Equals(SatelliteCommands, other.SatelliteCommands)) return false;
      if (!object.Equals(GroundStationConfigurationRequest, other.GroundStationConfigurationRequest)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlanId.Length != 0) hash ^= PlanId.GetHashCode();
      if (ResponseId.Length != 0) hash ^= ResponseId.GetHashCode();
      if (responseCase_ == ResponseOneofCase.SatelliteCommands) hash ^= SatelliteCommands.GetHashCode();
      if (responseCase_ == ResponseOneofCase.GroundStationConfigurationRequest) hash ^= GroundStationConfigurationRequest.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlanId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlanId);
      }
      if (ResponseId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResponseId);
      }
      if (responseCase_ == ResponseOneofCase.SatelliteCommands) {
        output.WriteRawTag(26);
        output.WriteMessage(SatelliteCommands);
      }
      if (responseCase_ == ResponseOneofCase.GroundStationConfigurationRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(GroundStationConfigurationRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlanId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlanId);
      }
      if (ResponseId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResponseId);
      }
      if (responseCase_ == ResponseOneofCase.SatelliteCommands) {
        output.WriteRawTag(26);
        output.WriteMessage(SatelliteCommands);
      }
      if (responseCase_ == ResponseOneofCase.GroundStationConfigurationRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(GroundStationConfigurationRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlanId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlanId);
      }
      if (ResponseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseId);
      }
      if (responseCase_ == ResponseOneofCase.SatelliteCommands) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SatelliteCommands);
      }
      if (responseCase_ == ResponseOneofCase.GroundStationConfigurationRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroundStationConfigurationRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroundStationStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.PlanId.Length != 0) {
        PlanId = other.PlanId;
      }
      if (other.ResponseId.Length != 0) {
        ResponseId = other.ResponseId;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.SatelliteCommands:
          if (SatelliteCommands == null) {
            SatelliteCommands = new global::Stellarstation.Api.V1.Groundstation.SatelliteCommands();
          }
          SatelliteCommands.MergeFrom(other.SatelliteCommands);
          break;
        case ResponseOneofCase.GroundStationConfigurationRequest:
          if (GroundStationConfigurationRequest == null) {
            GroundStationConfigurationRequest = new global::Stellarstation.Api.V1.GroundStationConfigurationRequest();
          }
          GroundStationConfigurationRequest.MergeFrom(other.GroundStationConfigurationRequest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlanId = input.ReadString();
            break;
          }
          case 18: {
            ResponseId = input.ReadString();
            break;
          }
          case 26: {
            global::Stellarstation.Api.V1.Groundstation.SatelliteCommands subBuilder = new global::Stellarstation.Api.V1.Groundstation.SatelliteCommands();
            if (responseCase_ == ResponseOneofCase.SatelliteCommands) {
              subBuilder.MergeFrom(SatelliteCommands);
            }
            input.ReadMessage(subBuilder);
            SatelliteCommands = subBuilder;
            break;
          }
          case 34: {
            global::Stellarstation.Api.V1.GroundStationConfigurationRequest subBuilder = new global::Stellarstation.Api.V1.GroundStationConfigurationRequest();
            if (responseCase_ == ResponseOneofCase.GroundStationConfigurationRequest) {
              subBuilder.MergeFrom(GroundStationConfigurationRequest);
            }
            input.ReadMessage(subBuilder);
            GroundStationConfigurationRequest = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlanId = input.ReadString();
            break;
          }
          case 18: {
            ResponseId = input.ReadString();
            break;
          }
          case 26: {
            global::Stellarstation.Api.V1.Groundstation.SatelliteCommands subBuilder = new global::Stellarstation.Api.V1.Groundstation.SatelliteCommands();
            if (responseCase_ == ResponseOneofCase.SatelliteCommands) {
              subBuilder.MergeFrom(SatelliteCommands);
            }
            input.ReadMessage(subBuilder);
            SatelliteCommands = subBuilder;
            break;
          }
          case 34: {
            global::Stellarstation.Api.V1.GroundStationConfigurationRequest subBuilder = new global::Stellarstation.Api.V1.GroundStationConfigurationRequest();
            if (responseCase_ == ResponseOneofCase.GroundStationConfigurationRequest) {
              subBuilder.MergeFrom(GroundStationConfigurationRequest);
            }
            input.ReadMessage(subBuilder);
            GroundStationConfigurationRequest = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Command to transmit to the satellite.
  /// </summary>
  public sealed partial class SatelliteCommands : pb::IMessage<SatelliteCommands>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SatelliteCommands> _parser = new pb::MessageParser<SatelliteCommands>(() => new SatelliteCommands());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SatelliteCommands> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Stellarstation.Api.V1.Groundstation.GroundstationReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SatelliteCommands() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SatelliteCommands(SatelliteCommands other) : this() {
      command_ = other.command_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SatelliteCommands Clone() {
      return new SatelliteCommands(this);
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_command_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> command_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// The command frames to send to the satellite. All commands must be transmitted in sequence
    /// immediately. After all commands have been transmitted, telemetry receive must be immediately
    /// enabled again.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Command {
      get { return command_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SatelliteCommands);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SatelliteCommands other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!command_.Equals(other.command_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= command_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      command_.WriteTo(output, _repeated_command_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      command_.WriteTo(ref output, _repeated_command_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += command_.CalculateSize(_repeated_command_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SatelliteCommands other) {
      if (other == null) {
        return;
      }
      command_.Add(other.command_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            command_.AddEntriesFrom(input, _repeated_command_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            command_.AddEntriesFrom(ref input, _repeated_command_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
